local character = game:GetService("Players").LocalPlayer.Character or game:GetService("Players").LocalPlayer.CharacterAdded:Wait()
local hrp = character.HumanoidRootPart
local localPlr = game:GetService("Players").LocalPlayer
local tween_Service = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear)
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/testakker/Roblox/refs/heads/main/Rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "testakker scripts",
    Icon = 16987271839, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "testakker scripts",
    LoadingSubtitle = "by testakker_2",
    Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
})
local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

if game:GetService("Players").LocalPlayer.Character then
    local JumpPowerSlider = PlayerTab:CreateSlider({
        Name = "Jump Power",
        Range = {50, 3472},
        Increment = 1,
        Suffix = "Jump Power",
        CurrentValue = 50,
        Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Value
        end,
    })
    JumpPowerSlider:Set(game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower)
    local JumpHeightSlider = PlayerTab:CreateSlider({
        Name = "Jump Height",
        Range = {7.2, 500},
        Increment = 1,
        Suffix = "Jump Height",
        CurrentValue = 7.2,
        Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpHeight = Value
        end,
    })
    JumpHeightSlider:Set(game:GetService("Players").LocalPlayer.Character.Humanoid.JumpHeight)
end

local Mob_Folder = game:GetService("Workspace").Playability.Enemys
local Bandit = false
local Farm_Tab = Window:CreateTab("Farm", 6975704454) -- Title, Image
local Bandints_Toggle = Farm_Tab:CreateToggle({
    Name = "Farm bandits(lvl 1-25)",
    CurrentValue = false,
    Flag = "bandits", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        CurrentValue = Value
        Bandit = Value
        if not CurrentValue then hrp.Anchored = false end
        while CurrentValue == true and task.wait() do
            hrp.Anchored = true
            for _, mob in Mob_Folder["Foosha Village"]:GetChildren() do
                while mob and mob:IsA("Model") and mob.Humanoid.Health > 0 and CurrentValue == true and mob.Parent == workspace:WaitForChild("Playability"):WaitForChild("Enemys"):WaitForChild("Foosha Village") and task.wait() do
                    hrp.Anchored = true
                    local mob_Root = mob.HumanoidRootPart
                    local calculate = mob_Root.CFrame * CFrame.new(0, -7, 0)
                    --if (character.HumanoidRootPart.Position - calculate.Position).Magnitude > 0.01 then
                        local tween = tween_Service:Create(hrp, tweenInfo, {CFrame = mob_Root.CFrame * CFrame.new(0,-7, 0)})
                        tween:Play()
                    --[[    tween.Completed:Wait()
                        print("0.3 seconds, V2")
                    end]]
                    if localPlr.Backpack:FindFirstChild("Combat") then
                        character.Humanoid:EquipTool(localPlr.Backpack:FindFirstChild("Combat"))
                    end
                    if not workspace:WaitForChild("Playability"):WaitForChild("Enemys"):WaitForChild("Foosha Village")[mob.Name] or workspace:WaitForChild("Playability"):WaitForChild("Enemys"):WaitForChild("Foosha Village")[mob.Name].Humanoid.Health <= 0 then break end
                    local args = {
                        "DealDamage",
                        {
                            CallTime = 1753525329.5177016,
                            Results = {
                                workspace:WaitForChild("Playability"):WaitForChild("Enemys"):WaitForChild("Foosha Village")[mob.Name]
                            },
                            Combo = 2,
                            DelayTime = 0.2
                        }
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("BetweenSides"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("CombatEvent"):FireServer(unpack(args))
                end
            end
        end
    end,
})
